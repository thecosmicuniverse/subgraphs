// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AuctionConfigUpdated extends ethereum.Event {
  get params(): AuctionConfigUpdated__Params {
    return new AuctionConfigUpdated__Params(this);
  }
}

export class AuctionConfigUpdated__Params {
  _event: AuctionConfigUpdated;

  constructor(event: AuctionConfigUpdated) {
    this._event = event;
  }

  get nexBidPercentInBasisPoint(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get extensionDuration(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AuctionFinalized extends ethereum.Event {
  get params(): AuctionFinalized__Params {
    return new AuctionFinalized__Params(this);
  }
}

export class AuctionFinalized__Params {
  _event: AuctionFinalized;

  constructor(event: AuctionFinalized) {
    this._event = event;
  }

  get saleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get bidder(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get royalty(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get marketFee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get ownerRev(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class BidPlaced extends ethereum.Event {
  get params(): BidPlaced__Params {
    return new BidPlaced__Params(this);
  }
}

export class BidPlaced__Params {
  _event: BidPlaced;

  constructor(event: BidPlaced) {
    this._event = event;
  }

  get saleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get bidAbount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ContractBidTokenUpdated extends ethereum.Event {
  get params(): ContractBidTokenUpdated__Params {
    return new ContractBidTokenUpdated__Params(this);
  }
}

export class ContractBidTokenUpdated__Params {
  _event: ContractBidTokenUpdated;

  constructor(event: ContractBidTokenUpdated) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get bidToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FixedPriceFinalized extends ethereum.Event {
  get params(): FixedPriceFinalized__Params {
    return new FixedPriceFinalized__Params(this);
  }
}

export class FixedPriceFinalized__Params {
  _event: FixedPriceFinalized;

  constructor(event: FixedPriceFinalized) {
    this._event = event;
  }

  get saleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get royalty(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get marketFee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get ownerRev(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class MarketFeesUpdated extends ethereum.Event {
  get params(): MarketFeesUpdated__Params {
    return new MarketFeesUpdated__Params(this);
  }
}

export class MarketFeesUpdated__Params {
  _event: MarketFeesUpdated;

  constructor(event: MarketFeesUpdated) {
    this._event = event;
  }

  get marketFeeBps(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MarketRoyaltyUpdated extends ethereum.Event {
  get params(): MarketRoyaltyUpdated__Params {
    return new MarketRoyaltyUpdated__Params(this);
  }
}

export class MarketRoyaltyUpdated__Params {
  _event: MarketRoyaltyUpdated;

  constructor(event: MarketRoyaltyUpdated) {
    this._event = event;
  }

  get maxRoyaltiyBps(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OfferFinalized extends ethereum.Event {
  get params(): OfferFinalized__Params {
    return new OfferFinalized__Params(this);
  }
}

export class OfferFinalized__Params {
  _event: OfferFinalized;

  constructor(event: OfferFinalized) {
    this._event = event;
  }

  get saleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get royalty(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get marketFee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get ownerRev(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SaleCanceled extends ethereum.Event {
  get params(): SaleCanceled__Params {
    return new SaleCanceled__Params(this);
  }
}

export class SaleCanceled__Params {
  _event: SaleCanceled;

  constructor(event: SaleCanceled) {
    this._event = event;
  }

  get saleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get reason(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SaleCreated extends ethereum.Event {
  get params(): SaleCreated__Params {
    return new SaleCreated__Params(this);
  }
}

export class SaleCreated__Params {
  _event: SaleCreated;

  constructor(event: SaleCreated) {
    this._event = event;
  }

  get saleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get saleType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get contractAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get tokenIds(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[5].value.toBigIntArray();
  }

  get bidToken(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get startTime(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get duration(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get extensionDuration(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get minPrice(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }
}

export class Marketplace__activeSalesResultValue0Struct extends ethereum.Tuple {
  get saleType(): i32 {
    return this[0].toI32();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get contractAddress(): Address {
    return this[2].toAddress();
  }

  get tokenType(): i32 {
    return this[3].toI32();
  }

  get tokenIds(): Array<BigInt> {
    return this[4].toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this[5].toBigIntArray();
  }

  get bidToken(): Address {
    return this[6].toAddress();
  }

  get startTime(): BigInt {
    return this[7].toBigInt();
  }

  get duration(): BigInt {
    return this[8].toBigInt();
  }

  get extensionDuration(): BigInt {
    return this[9].toBigInt();
  }

  get endTime(): BigInt {
    return this[10].toBigInt();
  }

  get bidder(): Address {
    return this[11].toAddress();
  }

  get bidAmount(): BigInt {
    return this[12].toBigInt();
  }
}

export class Marketplace__getAuctionConfigResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class Marketplace__royaltiesResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getRecipient(): Address {
    return this.value0;
  }

  getAmount(): BigInt {
    return this.value1;
  }
}

export class Marketplace__saleIdToSaleResult {
  value0: i32;
  value1: Address;
  value2: Address;
  value3: i32;
  value4: Address;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: Address;
  value10: BigInt;

  constructor(
    value0: i32,
    value1: Address,
    value2: Address,
    value3: i32,
    value4: Address,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: Address,
    value10: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromAddress(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    return map;
  }

  getSaleType(): i32 {
    return this.value0;
  }

  getSeller(): Address {
    return this.value1;
  }

  getContractAddress(): Address {
    return this.value2;
  }

  getTokenType(): i32 {
    return this.value3;
  }

  getBidToken(): Address {
    return this.value4;
  }

  getStartTime(): BigInt {
    return this.value5;
  }

  getDuration(): BigInt {
    return this.value6;
  }

  getExtensionDuration(): BigInt {
    return this.value7;
  }

  getEndTime(): BigInt {
    return this.value8;
  }

  getBidder(): Address {
    return this.value9;
  }

  getBidAmount(): BigInt {
    return this.value10;
  }
}

export class Marketplace extends ethereum.SmartContract {
  static bind(address: Address): Marketplace {
    return new Marketplace("Marketplace", address);
  }

  ADMIN_ROLE(): Bytes {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  AUTHORIZED_ROLE(): Bytes {
    let result = super.call(
      "AUTHORIZED_ROLE",
      "AUTHORIZED_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_AUTHORIZED_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "AUTHORIZED_ROLE",
      "AUTHORIZED_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  activeSaleIds(): Array<BigInt> {
    let result = super.call("activeSaleIds", "activeSaleIds():(uint256[])", []);

    return result[0].toBigIntArray();
  }

  try_activeSaleIds(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "activeSaleIds",
      "activeSaleIds():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  activeSales(): Array<Marketplace__activeSalesResultValue0Struct> {
    let result = super.call(
      "activeSales",
      "activeSales():((uint8,address,address,uint8,uint256[],uint256[],address,uint256,uint256,uint256,uint256,address,uint256)[])",
      []
    );

    return result[0].toTupleArray<Marketplace__activeSalesResultValue0Struct>();
  }

  try_activeSales(): ethereum.CallResult<
    Array<Marketplace__activeSalesResultValue0Struct>
  > {
    let result = super.tryCall(
      "activeSales",
      "activeSales():((uint8,address,address,uint8,uint256[],uint256[],address,uint256,uint256,uint256,uint256,address,uint256)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Marketplace__activeSalesResultValue0Struct>()
    );
  }

  contractAddressToBidToken(param0: Address): Address {
    let result = super.call(
      "contractAddressToBidToken",
      "contractAddressToBidToken(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_contractAddressToBidToken(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "contractAddressToBidToken",
      "contractAddressToBidToken(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAuctionConfig(): Marketplace__getAuctionConfigResult {
    let result = super.call(
      "getAuctionConfig",
      "getAuctionConfig():(uint256,uint256)",
      []
    );

    return new Marketplace__getAuctionConfigResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getAuctionConfig(): ethereum.CallResult<
    Marketplace__getAuctionConfigResult
  > {
    let result = super.tryCall(
      "getAuctionConfig",
      "getAuctionConfig():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Marketplace__getAuctionConfigResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getAuctionMinBidAmount(saleId: BigInt): BigInt {
    let result = super.call(
      "getAuctionMinBidAmount",
      "getAuctionMinBidAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(saleId)]
    );

    return result[0].toBigInt();
  }

  try_getAuctionMinBidAmount(saleId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAuctionMinBidAmount",
      "getAuctionMinBidAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(saleId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getContractBidToken(contractAddress: Address): Address {
    let result = super.call(
      "getContractBidToken",
      "getContractBidToken(address):(address)",
      [ethereum.Value.fromAddress(contractAddress)]
    );

    return result[0].toAddress();
  }

  try_getContractBidToken(
    contractAddress: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getContractBidToken",
      "getContractBidToken(address):(address)",
      [ethereum.Value.fromAddress(contractAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getMarketFeeConfig(): BigInt {
    let result = super.call(
      "getMarketFeeConfig",
      "getMarketFeeConfig():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getMarketFeeConfig(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMarketFeeConfig",
      "getMarketFeeConfig():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMarketRoyaltyConfig(): BigInt {
    let result = super.call(
      "getMarketRoyaltyConfig",
      "getMarketRoyaltyConfig():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getMarketRoyaltyConfig(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMarketRoyaltyConfig",
      "getMarketRoyaltyConfig():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTreasury(): Address {
    let result = super.call("getTreasury", "getTreasury():(address)", []);

    return result[0].toAddress();
  }

  try_getTreasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("getTreasury", "getTreasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  royalties(param0: Address, param1: BigInt): Marketplace__royaltiesResult {
    let result = super.call(
      "royalties",
      "royalties(address,uint256):(address,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new Marketplace__royaltiesResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_royalties(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<Marketplace__royaltiesResult> {
    let result = super.tryCall(
      "royalties",
      "royalties(address,uint256):(address,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Marketplace__royaltiesResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  saleIdToSale(param0: BigInt): Marketplace__saleIdToSaleResult {
    let result = super.call(
      "saleIdToSale",
      "saleIdToSale(uint256):(uint8,address,address,uint8,address,uint256,uint256,uint256,uint256,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Marketplace__saleIdToSaleResult(
      result[0].toI32(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toI32(),
      result[4].toAddress(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toAddress(),
      result[10].toBigInt()
    );
  }

  try_saleIdToSale(
    param0: BigInt
  ): ethereum.CallResult<Marketplace__saleIdToSaleResult> {
    let result = super.tryCall(
      "saleIdToSale",
      "saleIdToSale(uint256):(uint8,address,address,uint8,address,uint256,uint256,uint256,uint256,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Marketplace__saleIdToSaleResult(
        value[0].toI32(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toI32(),
        value[4].toAddress(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toAddress(),
        value[10].toBigInt()
      )
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AcceptOfferCall extends ethereum.Call {
  get inputs(): AcceptOfferCall__Inputs {
    return new AcceptOfferCall__Inputs(this);
  }

  get outputs(): AcceptOfferCall__Outputs {
    return new AcceptOfferCall__Outputs(this);
  }
}

export class AcceptOfferCall__Inputs {
  _call: AcceptOfferCall;

  constructor(call: AcceptOfferCall) {
    this._call = call;
  }

  get saleId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptOfferCall__Outputs {
  _call: AcceptOfferCall;

  constructor(call: AcceptOfferCall) {
    this._call = call;
  }
}

export class BidAuctionCall extends ethereum.Call {
  get inputs(): BidAuctionCall__Inputs {
    return new BidAuctionCall__Inputs(this);
  }

  get outputs(): BidAuctionCall__Outputs {
    return new BidAuctionCall__Outputs(this);
  }
}

export class BidAuctionCall__Inputs {
  _call: BidAuctionCall;

  constructor(call: BidAuctionCall) {
    this._call = call;
  }

  get saleId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bidAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BidAuctionCall__Outputs {
  _call: BidAuctionCall;

  constructor(call: BidAuctionCall) {
    this._call = call;
  }
}

export class BuyFixedPriceCall extends ethereum.Call {
  get inputs(): BuyFixedPriceCall__Inputs {
    return new BuyFixedPriceCall__Inputs(this);
  }

  get outputs(): BuyFixedPriceCall__Outputs {
    return new BuyFixedPriceCall__Outputs(this);
  }
}

export class BuyFixedPriceCall__Inputs {
  _call: BuyFixedPriceCall;

  constructor(call: BuyFixedPriceCall) {
    this._call = call;
  }

  get saleId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get buyAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BuyFixedPriceCall__Outputs {
  _call: BuyFixedPriceCall;

  constructor(call: BuyFixedPriceCall) {
    this._call = call;
  }
}

export class CancelOfferCall extends ethereum.Call {
  get inputs(): CancelOfferCall__Inputs {
    return new CancelOfferCall__Inputs(this);
  }

  get outputs(): CancelOfferCall__Outputs {
    return new CancelOfferCall__Outputs(this);
  }
}

export class CancelOfferCall__Inputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }

  get saleId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelOfferCall__Outputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }
}

export class CancelSaleCall extends ethereum.Call {
  get inputs(): CancelSaleCall__Inputs {
    return new CancelSaleCall__Inputs(this);
  }

  get outputs(): CancelSaleCall__Outputs {
    return new CancelSaleCall__Outputs(this);
  }
}

export class CancelSaleCall__Inputs {
  _call: CancelSaleCall;

  constructor(call: CancelSaleCall) {
    this._call = call;
  }

  get saleId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get reason(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CancelSaleCall__Outputs {
  _call: CancelSaleCall;

  constructor(call: CancelSaleCall) {
    this._call = call;
  }
}

export class CancelSaleByAdminCall extends ethereum.Call {
  get inputs(): CancelSaleByAdminCall__Inputs {
    return new CancelSaleByAdminCall__Inputs(this);
  }

  get outputs(): CancelSaleByAdminCall__Outputs {
    return new CancelSaleByAdminCall__Outputs(this);
  }
}

export class CancelSaleByAdminCall__Inputs {
  _call: CancelSaleByAdminCall;

  constructor(call: CancelSaleByAdminCall) {
    this._call = call;
  }

  get saleId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get reason(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CancelSaleByAdminCall__Outputs {
  _call: CancelSaleByAdminCall;

  constructor(call: CancelSaleByAdminCall) {
    this._call = call;
  }
}

export class CreateERC1155AuctionCall extends ethereum.Call {
  get inputs(): CreateERC1155AuctionCall__Inputs {
    return new CreateERC1155AuctionCall__Inputs(this);
  }

  get outputs(): CreateERC1155AuctionCall__Outputs {
    return new CreateERC1155AuctionCall__Outputs(this);
  }
}

export class CreateERC1155AuctionCall__Inputs {
  _call: CreateERC1155AuctionCall;

  constructor(call: CreateERC1155AuctionCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get bidToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get startTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get duration(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get minPrice(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateERC1155AuctionCall__Outputs {
  _call: CreateERC1155AuctionCall;

  constructor(call: CreateERC1155AuctionCall) {
    this._call = call;
  }
}

export class CreateERC1155BundleAuctionCall extends ethereum.Call {
  get inputs(): CreateERC1155BundleAuctionCall__Inputs {
    return new CreateERC1155BundleAuctionCall__Inputs(this);
  }

  get outputs(): CreateERC1155BundleAuctionCall__Outputs {
    return new CreateERC1155BundleAuctionCall__Outputs(this);
  }
}

export class CreateERC1155BundleAuctionCall__Inputs {
  _call: CreateERC1155BundleAuctionCall;

  constructor(call: CreateERC1155BundleAuctionCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get bidToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get startTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get duration(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get minPrice(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateERC1155BundleAuctionCall__Outputs {
  _call: CreateERC1155BundleAuctionCall;

  constructor(call: CreateERC1155BundleAuctionCall) {
    this._call = call;
  }
}

export class CreateERC1155BundleFixedPriceCall extends ethereum.Call {
  get inputs(): CreateERC1155BundleFixedPriceCall__Inputs {
    return new CreateERC1155BundleFixedPriceCall__Inputs(this);
  }

  get outputs(): CreateERC1155BundleFixedPriceCall__Outputs {
    return new CreateERC1155BundleFixedPriceCall__Outputs(this);
  }
}

export class CreateERC1155BundleFixedPriceCall__Inputs {
  _call: CreateERC1155BundleFixedPriceCall;

  constructor(call: CreateERC1155BundleFixedPriceCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get bidToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get startTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get duration(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get minPrice(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateERC1155BundleFixedPriceCall__Outputs {
  _call: CreateERC1155BundleFixedPriceCall;

  constructor(call: CreateERC1155BundleFixedPriceCall) {
    this._call = call;
  }
}

export class CreateERC1155FixedPriceCall extends ethereum.Call {
  get inputs(): CreateERC1155FixedPriceCall__Inputs {
    return new CreateERC1155FixedPriceCall__Inputs(this);
  }

  get outputs(): CreateERC1155FixedPriceCall__Outputs {
    return new CreateERC1155FixedPriceCall__Outputs(this);
  }
}

export class CreateERC1155FixedPriceCall__Inputs {
  _call: CreateERC1155FixedPriceCall;

  constructor(call: CreateERC1155FixedPriceCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get bidToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get startTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get duration(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get minPrice(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateERC1155FixedPriceCall__Outputs {
  _call: CreateERC1155FixedPriceCall;

  constructor(call: CreateERC1155FixedPriceCall) {
    this._call = call;
  }
}

export class CreateERC721AuctionCall extends ethereum.Call {
  get inputs(): CreateERC721AuctionCall__Inputs {
    return new CreateERC721AuctionCall__Inputs(this);
  }

  get outputs(): CreateERC721AuctionCall__Outputs {
    return new CreateERC721AuctionCall__Outputs(this);
  }
}

export class CreateERC721AuctionCall__Inputs {
  _call: CreateERC721AuctionCall;

  constructor(call: CreateERC721AuctionCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get bidToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get startTime(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get duration(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get minPrice(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get royaltyBps(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateERC721AuctionCall__Outputs {
  _call: CreateERC721AuctionCall;

  constructor(call: CreateERC721AuctionCall) {
    this._call = call;
  }
}

export class CreateERC721FixedPriceCall extends ethereum.Call {
  get inputs(): CreateERC721FixedPriceCall__Inputs {
    return new CreateERC721FixedPriceCall__Inputs(this);
  }

  get outputs(): CreateERC721FixedPriceCall__Outputs {
    return new CreateERC721FixedPriceCall__Outputs(this);
  }
}

export class CreateERC721FixedPriceCall__Inputs {
  _call: CreateERC721FixedPriceCall;

  constructor(call: CreateERC721FixedPriceCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get bidToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get startTime(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get duration(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get minPrice(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get royaltyBps(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateERC721FixedPriceCall__Outputs {
  _call: CreateERC721FixedPriceCall;

  constructor(call: CreateERC721FixedPriceCall) {
    this._call = call;
  }
}

export class CreateERC721OfferCall extends ethereum.Call {
  get inputs(): CreateERC721OfferCall__Inputs {
    return new CreateERC721OfferCall__Inputs(this);
  }

  get outputs(): CreateERC721OfferCall__Outputs {
    return new CreateERC721OfferCall__Outputs(this);
  }
}

export class CreateERC721OfferCall__Inputs {
  _call: CreateERC721OfferCall;

  constructor(call: CreateERC721OfferCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get bidToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get duration(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get minPrice(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class CreateERC721OfferCall__Outputs {
  _call: CreateERC721OfferCall;

  constructor(call: CreateERC721OfferCall) {
    this._call = call;
  }
}

export class FinalizeAuctionCall extends ethereum.Call {
  get inputs(): FinalizeAuctionCall__Inputs {
    return new FinalizeAuctionCall__Inputs(this);
  }

  get outputs(): FinalizeAuctionCall__Outputs {
    return new FinalizeAuctionCall__Outputs(this);
  }
}

export class FinalizeAuctionCall__Inputs {
  _call: FinalizeAuctionCall;

  constructor(call: FinalizeAuctionCall) {
    this._call = call;
  }

  get saleId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FinalizeAuctionCall__Outputs {
  _call: FinalizeAuctionCall;

  constructor(call: FinalizeAuctionCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get maxRoyaltyBps(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get marketFeeBps(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get treasury(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get nexBidPercentBps(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RemoveContractBidTokenCall extends ethereum.Call {
  get inputs(): RemoveContractBidTokenCall__Inputs {
    return new RemoveContractBidTokenCall__Inputs(this);
  }

  get outputs(): RemoveContractBidTokenCall__Outputs {
    return new RemoveContractBidTokenCall__Outputs(this);
  }
}

export class RemoveContractBidTokenCall__Inputs {
  _call: RemoveContractBidTokenCall;

  constructor(call: RemoveContractBidTokenCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveContractBidTokenCall__Outputs {
  _call: RemoveContractBidTokenCall;

  constructor(call: RemoveContractBidTokenCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetContractBidTokenCall extends ethereum.Call {
  get inputs(): SetContractBidTokenCall__Inputs {
    return new SetContractBidTokenCall__Inputs(this);
  }

  get outputs(): SetContractBidTokenCall__Outputs {
    return new SetContractBidTokenCall__Outputs(this);
  }
}

export class SetContractBidTokenCall__Inputs {
  _call: SetContractBidTokenCall;

  constructor(call: SetContractBidTokenCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get bidTokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetContractBidTokenCall__Outputs {
  _call: SetContractBidTokenCall;

  constructor(call: SetContractBidTokenCall) {
    this._call = call;
  }
}

export class SetMarketFeeConfigCall extends ethereum.Call {
  get inputs(): SetMarketFeeConfigCall__Inputs {
    return new SetMarketFeeConfigCall__Inputs(this);
  }

  get outputs(): SetMarketFeeConfigCall__Outputs {
    return new SetMarketFeeConfigCall__Outputs(this);
  }
}

export class SetMarketFeeConfigCall__Inputs {
  _call: SetMarketFeeConfigCall;

  constructor(call: SetMarketFeeConfigCall) {
    this._call = call;
  }

  get marketFeeBps(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMarketFeeConfigCall__Outputs {
  _call: SetMarketFeeConfigCall;

  constructor(call: SetMarketFeeConfigCall) {
    this._call = call;
  }
}

export class SetMarketRoyaltyConfigCall extends ethereum.Call {
  get inputs(): SetMarketRoyaltyConfigCall__Inputs {
    return new SetMarketRoyaltyConfigCall__Inputs(this);
  }

  get outputs(): SetMarketRoyaltyConfigCall__Outputs {
    return new SetMarketRoyaltyConfigCall__Outputs(this);
  }
}

export class SetMarketRoyaltyConfigCall__Inputs {
  _call: SetMarketRoyaltyConfigCall;

  constructor(call: SetMarketRoyaltyConfigCall) {
    this._call = call;
  }

  get maxRoyaltyBps(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMarketRoyaltyConfigCall__Outputs {
  _call: SetMarketRoyaltyConfigCall;

  constructor(call: SetMarketRoyaltyConfigCall) {
    this._call = call;
  }
}

export class UpdateAuctionConfigCall extends ethereum.Call {
  get inputs(): UpdateAuctionConfigCall__Inputs {
    return new UpdateAuctionConfigCall__Inputs(this);
  }

  get outputs(): UpdateAuctionConfigCall__Outputs {
    return new UpdateAuctionConfigCall__Outputs(this);
  }
}

export class UpdateAuctionConfigCall__Inputs {
  _call: UpdateAuctionConfigCall;

  constructor(call: UpdateAuctionConfigCall) {
    this._call = call;
  }

  get nexBidPercentBps(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateAuctionConfigCall__Outputs {
  _call: UpdateAuctionConfigCall;

  constructor(call: UpdateAuctionConfigCall) {
    this._call = call;
  }
}
